// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/lock/lock.proto

package lock

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AcquireRequest struct {
	Holder               string   `protobuf:"bytes,1,opt,name=Holder,proto3" json:"Holder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireRequest) Reset()         { *m = AcquireRequest{} }
func (m *AcquireRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireRequest) ProtoMessage()    {}
func (*AcquireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_lock_6a7d9917185197d6, []int{0}
}
func (m *AcquireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireRequest.Unmarshal(m, b)
}
func (m *AcquireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireRequest.Marshal(b, m, deterministic)
}
func (dst *AcquireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireRequest.Merge(dst, src)
}
func (m *AcquireRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireRequest.Size(m)
}
func (m *AcquireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireRequest proto.InternalMessageInfo

func (m *AcquireRequest) GetHolder() string {
	if m != nil {
		return m.Holder
	}
	return ""
}

type AcquireResponse struct {
	Acquired             bool     `protobuf:"varint,1,opt,name=Acquired,proto3" json:"Acquired,omitempty"`
	Holder               string   `protobuf:"bytes,2,opt,name=Holder,proto3" json:"Holder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireResponse) Reset()         { *m = AcquireResponse{} }
func (m *AcquireResponse) String() string { return proto.CompactTextString(m) }
func (*AcquireResponse) ProtoMessage()    {}
func (*AcquireResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_lock_6a7d9917185197d6, []int{1}
}
func (m *AcquireResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireResponse.Unmarshal(m, b)
}
func (m *AcquireResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireResponse.Marshal(b, m, deterministic)
}
func (dst *AcquireResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireResponse.Merge(dst, src)
}
func (m *AcquireResponse) XXX_Size() int {
	return xxx_messageInfo_AcquireResponse.Size(m)
}
func (m *AcquireResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireResponse proto.InternalMessageInfo

func (m *AcquireResponse) GetAcquired() bool {
	if m != nil {
		return m.Acquired
	}
	return false
}

func (m *AcquireResponse) GetHolder() string {
	if m != nil {
		return m.Holder
	}
	return ""
}

type ReleaseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseRequest) Reset()         { *m = ReleaseRequest{} }
func (m *ReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseRequest) ProtoMessage()    {}
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_lock_6a7d9917185197d6, []int{2}
}
func (m *ReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseRequest.Unmarshal(m, b)
}
func (m *ReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseRequest.Marshal(b, m, deterministic)
}
func (dst *ReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseRequest.Merge(dst, src)
}
func (m *ReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseRequest.Size(m)
}
func (m *ReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseRequest proto.InternalMessageInfo

type ReleaseResponse struct {
	Released             bool     `protobuf:"varint,1,opt,name=Released,proto3" json:"Released,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseResponse) Reset()         { *m = ReleaseResponse{} }
func (m *ReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*ReleaseResponse) ProtoMessage()    {}
func (*ReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_lock_6a7d9917185197d6, []int{3}
}
func (m *ReleaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseResponse.Unmarshal(m, b)
}
func (m *ReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseResponse.Marshal(b, m, deterministic)
}
func (dst *ReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseResponse.Merge(dst, src)
}
func (m *ReleaseResponse) XXX_Size() int {
	return xxx_messageInfo_ReleaseResponse.Size(m)
}
func (m *ReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseResponse proto.InternalMessageInfo

func (m *ReleaseResponse) GetReleased() bool {
	if m != nil {
		return m.Released
	}
	return false
}

func init() {
	proto.RegisterType((*AcquireRequest)(nil), "AcquireRequest")
	proto.RegisterType((*AcquireResponse)(nil), "AcquireResponse")
	proto.RegisterType((*ReleaseRequest)(nil), "ReleaseRequest")
	proto.RegisterType((*ReleaseResponse)(nil), "ReleaseResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LockClient is the client API for Lock service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LockClient interface {
	Acquire(ctx context.Context, in *AcquireRequest, opts ...grpc.CallOption) (*AcquireResponse, error)
	Release(ctx context.Context, in *ReleaseRequest, opts ...grpc.CallOption) (*ReleaseResponse, error)
}

type lockClient struct {
	cc *grpc.ClientConn
}

func NewLockClient(cc *grpc.ClientConn) LockClient {
	return &lockClient{cc}
}

func (c *lockClient) Acquire(ctx context.Context, in *AcquireRequest, opts ...grpc.CallOption) (*AcquireResponse, error) {
	out := new(AcquireResponse)
	err := c.cc.Invoke(ctx, "/Lock/Acquire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lockClient) Release(ctx context.Context, in *ReleaseRequest, opts ...grpc.CallOption) (*ReleaseResponse, error) {
	out := new(ReleaseResponse)
	err := c.cc.Invoke(ctx, "/Lock/Release", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LockServer is the server API for Lock service.
type LockServer interface {
	Acquire(context.Context, *AcquireRequest) (*AcquireResponse, error)
	Release(context.Context, *ReleaseRequest) (*ReleaseResponse, error)
}

func RegisterLockServer(s *grpc.Server, srv LockServer) {
	s.RegisterService(&_Lock_serviceDesc, srv)
}

func _Lock_Acquire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LockServer).Acquire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Lock/Acquire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LockServer).Acquire(ctx, req.(*AcquireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lock_Release_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LockServer).Release(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Lock/Release",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LockServer).Release(ctx, req.(*ReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lock_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Lock",
	HandlerType: (*LockServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Acquire",
			Handler:    _Lock_Acquire_Handler,
		},
		{
			MethodName: "Release",
			Handler:    _Lock_Release_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/lock/lock.proto",
}

func init() { proto.RegisterFile("proto/lock/lock.proto", fileDescriptor_lock_6a7d9917185197d6) }

var fileDescriptor_lock_6a7d9917185197d6 = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0xc9, 0x4f, 0xce, 0x06, 0x13, 0x7a, 0x60, 0xbe, 0x92, 0x06, 0x17, 0x9f, 0x63,
	0x72, 0x61, 0x69, 0x66, 0x51, 0x6a, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x18, 0x17,
	0x9b, 0x47, 0x7e, 0x4e, 0x4a, 0x6a, 0x91, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x94, 0xa7,
	0xe4, 0xca, 0xc5, 0x0f, 0x57, 0x59, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc5, 0xc5, 0x01,
	0x15, 0x4a, 0x01, 0x2b, 0xe6, 0x08, 0x82, 0xf3, 0x91, 0x8c, 0x61, 0x42, 0x31, 0x46, 0x80, 0x8b,
	0x2f, 0x28, 0x35, 0x27, 0x35, 0xb1, 0x18, 0x66, 0xa1, 0x92, 0x2e, 0x17, 0x3f, 0x5c, 0x04, 0x61,
	0x30, 0x54, 0x08, 0x6e, 0x30, 0x8c, 0x6f, 0x94, 0xc4, 0xc5, 0xe2, 0x93, 0x9f, 0x9c, 0x2d, 0xa4,
	0xc3, 0xc5, 0x0e, 0xb5, 0x4c, 0x88, 0x5f, 0x0f, 0xd5, 0x0f, 0x52, 0x02, 0x7a, 0xe8, 0x4e, 0xd5,
	0xe1, 0x62, 0x87, 0x9a, 0x20, 0xc4, 0xaf, 0x87, 0xea, 0x00, 0x29, 0x01, 0x3d, 0x34, 0xfb, 0x93,
	0xd8, 0xc0, 0x81, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x67, 0xfa, 0xd1, 0xa6, 0x35, 0x01,
	0x00, 0x00,
}
